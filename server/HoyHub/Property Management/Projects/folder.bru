meta {
  name: Projects
  seq: 1
}

auth {
  mode: inherit
}

vars:pre-request {
  project_id: 3cbef2dd-5b12-470b-bdc4-4d0a79d182ef
}

docs {
  # Project Management API Documentation
  
  ## Endpoints Overview
  
  | Action           | Method | Endpoint                              | Description                                 |
  |------------------|--------|---------------------------------------|---------------------------------------------|
  | List Projects    | GET    | /projects/                            | List all projects (paginated, not deleted)  |
  | Create Project   | POST   | /projects/create                      | Create a new project                        |
  | Retrieve Project | GET    | /projects/<uuid:pk>                   | Get a project by ID                         |
  | Update Project   | PUT    | /projects/<uuid:pk>/update            | Update a project by ID                      |
  | Delete Project   | DELETE | /projects/<uuid:pk>/delete            | Soft delete a project (is_deleted=true)     |
  
  ## 1. List Projects
  
  **GET** `/projects/`
  
  - Returns a paginated list of all non-deleted projects.
  - Query Parameters: `page` (int, optional), `page_size` (int, optional)
  - Response Example:
    {
      "count": 1,
      "next": null,
      "previous": null,
      "results": [
        {
          "id": "uuid",
          "name": "Project Name",
          "location": { /* LocationNode fields */ },
          "created_at": "2024-06-01T12:00:00Z",
          "is_deleted": false
        }
      ]
    }
  
  ## 2. Create Project
  
  **POST** `/projects/create`
  
  - Creates a new project and its associated location nodes.
  - Request Body Example:
    {
      "name": "Project Name",
      "location_data": {
        "city": "City Name",
        "address": "123 Main St"
      }
    }
  - Required: `name` (string), `location_data` (object)
  - Response Example:
    {
      "id": "uuid",
      "name": "Project Name",
      "location": { /* LocationNode fields */ },
      "created_at": "2024-06-01T12:00:00Z"
    }
  
  ## 3. Retrieve Project
  
  **GET** `/projects/<uuid:pk>`
  
  - Retrieves details of a specific project by its UUID.
  - Response Example:
    {
      "id": "uuid",
      "name": "Project Name",
      "location": { /* LocationNode fields */ },
      "created_at": "2024-06-01T12:00:00Z",
      "is_deleted": false
    }
  
  ## 4. Update Project
  
  **PUT** `/projects/<uuid:pk>/update`
  
  - Updates the details of a specific project.
  - Request Body Example:
    {
      "name": "Updated Project Name",
      "location_data": {
        "city": "New City"
      }
    }
  - Optional: `name` (string), `location_data` (object)
  - Response Example:
    {
      "id": "uuid",
      "name": "Updated Project Name",
      "location": { /* LocationNode fields */ },
      "updated_at": "2024-06-02T09:00:00Z"
    }
  
  ## 5. Delete Project
  
  **DELETE** `/projects/<uuid:pk>/delete`
  
  - Soft deletes a project (sets `is_deleted=true`).
  - Response Example:
    {
      "id": "uuid",
      "is_deleted": true,
      "deleted_at": "2024-06-03T10:00:00Z"
    }
}
